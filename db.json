{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/noise/source/css/font.less","path":"css/font.less","modified":0,"renderable":1},{"_id":"themes/noise/source/css/highlight.less","path":"css/highlight.less","modified":0,"renderable":1},{"_id":"themes/noise/source/css/noise.less","path":"css/noise.less","modified":0,"renderable":1},{"_id":"themes/noise/source/css/normalize.css","path":"css/normalize.css","modified":0,"renderable":1}],"Cache":[{"_id":"themes/noise/.travis.yml","hash":"0a26a400ffc0a2a45c213d380bcdc1aba2e3b15c","modified":1529641030080},{"_id":"themes/noise/README.md","hash":"2bfea442c6f2531ae7b9fbaf610687a8364f82a9","modified":1529641030081},{"_id":"themes/noise/LICENSE","hash":"86c2c15a2d0c891e5c0912e31ff7a12ef694ce3f","modified":1529641030081},{"_id":"themes/noise/_config.yml","hash":"8d7c4ddd5e38176dad0f0b24b2bf00673609af7e","modified":1529641030082},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1509151198000},{"_id":"themes/noise/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1529641030033},{"_id":"themes/noise/.git/config","hash":"1bff9b6eaf288cbd3cca2c31c4e14b203f29d71d","modified":1529641030063},{"_id":"themes/noise/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1529641021335},{"_id":"themes/noise/.git/index","hash":"2b0b46cdeb8083c6d8700da9dfda211c891f7433","modified":1529641030088},{"_id":"themes/noise/.git/packed-refs","hash":"5b755ce2b6bc23178295c0db9905613a20eb4a1d","modified":1529641030023},{"_id":"themes/noise/layout/archive.pug","hash":"7478968d7302d4ebe085e88c380f48c386257841","modified":1529641030083},{"_id":"themes/noise/layout/base.pug","hash":"cbba2d6ba669a8fd42954d7eeea0f2b1cb72833b","modified":1529641030084},{"_id":"themes/noise/layout/index.pug","hash":"c4c07d80d5959abfa8b98255dc8e0fcb8e25abc6","modified":1529641030084},{"_id":"themes/noise/layout/page.pug","hash":"de3f5052e1558459ab933eb04ef321f3d54016e7","modified":1529641030084},{"_id":"themes/noise/layout/post.pug","hash":"b6b1b448728d2f1470790bf4aea1028752096f68","modified":1529641030085},{"_id":"source/_posts/Markdown/hello-world.md","hash":"248189efaf4d9460a8fe0b1ea70f7eed90a66351","modified":1529661259927},{"_id":"themes/noise/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1529641021347},{"_id":"themes/noise/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1529641021357},{"_id":"themes/noise/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1529641021360},{"_id":"themes/noise/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1529641021361},{"_id":"themes/noise/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1529641021363},{"_id":"themes/noise/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1529641021365},{"_id":"themes/noise/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1529641021372},{"_id":"themes/noise/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1529641021379},{"_id":"themes/noise/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1529641021380},{"_id":"themes/noise/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1529641021393},{"_id":"themes/noise/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1529641021400},{"_id":"themes/noise/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1529641021404},{"_id":"themes/noise/.git/logs/HEAD","hash":"b68da62641b826e3c39cb6e2cd0779f6c54587b7","modified":1529641030036},{"_id":"themes/noise/layout/_partial/comments.pug","hash":"f97607b36dafaa9ef3dc109d7b8393aef5cef19e","modified":1529641030082},{"_id":"themes/noise/layout/_partial/helpers.pug","hash":"9a9523adde6bd31256767bc0cb341c7569e725ce","modified":1529641030083},{"_id":"themes/noise/layout/_partial/paginator.pug","hash":"484f0850cdc8d8a954c0ac7131ebfd067047c5e5","modified":1529641030083},{"_id":"themes/noise/layout/_partial/mathjax.pug","hash":"8df00433013fd0f6d41ede8240fd217b3dad8ff8","modified":1529641030083},{"_id":"themes/noise/source/css/_variables.less","hash":"488149b5a7c2953396b859074fa58e4d80dd0442","modified":1529641030085},{"_id":"themes/noise/source/css/font.less","hash":"ff469bbb929ad07d8fa9a8881129ea225adeeb73","modified":1529641030086},{"_id":"themes/noise/source/css/highlight.less","hash":"69087ca01f6f10948b640400823d8006e554cae1","modified":1529641030086},{"_id":"themes/noise/source/css/noise.less","hash":"d88362c331b7ae03a5444c4a0272f7ac4f6bc5b7","modified":1529641030087},{"_id":"themes/noise/source/css/normalize.css","hash":"46844f2fc407f66636c6e783ddaeed2a684c2f8f","modified":1529641030087},{"_id":"themes/noise/.git/objects/pack/pack-7736a95989c41a8edf8ab0506aa62c5feabcb76a.idx","hash":"12456d08ff99e33cd927e65b49b73ab513666668","modified":1529641029782},{"_id":"themes/noise/.git/refs/heads/master","hash":"de1ce030a1ed678ce631b54ff4a4453d3a73cd8c","modified":1529641030036},{"_id":"themes/noise/.git/logs/refs/heads/master","hash":"b68da62641b826e3c39cb6e2cd0779f6c54587b7","modified":1529641030037},{"_id":"themes/noise/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1529641030031},{"_id":"themes/noise/.git/logs/refs/remotes/origin/HEAD","hash":"b68da62641b826e3c39cb6e2cd0779f6c54587b7","modified":1529641030031},{"_id":"themes/noise/.git/objects/pack/pack-7736a95989c41a8edf8ab0506aa62c5feabcb76a.pack","hash":"0ae5dff9b45cdcf5c3b1d831954e3e52407d24ed","modified":1529641029811},{"_id":"public/2018/06/22/Markdown/hello-world/index.html","hash":"c76cd8bf0f22e9e693f3f35763bf4efe77678f67","modified":1529667090293},{"_id":"public/2018/06/22/hello-world/index.html","hash":"b8e04cf324a362385f93570473fb39bc03a97c9d","modified":1529656553434},{"_id":"public/archives/index.html","hash":"95cbf54eb3442a4a00559d087abefd66435efc2d","modified":1529667090293},{"_id":"public/archives/2018/index.html","hash":"95cbf54eb3442a4a00559d087abefd66435efc2d","modified":1529667090294},{"_id":"public/archives/2018/06/index.html","hash":"95cbf54eb3442a4a00559d087abefd66435efc2d","modified":1529667090294},{"_id":"public/index.html","hash":"5907822c847b3425af1def910bde0f87265a5ec2","modified":1529667090294},{"_id":"public/css/normalize.css","hash":"d0fbef3dd405f26a5fdc896ca1f7875901782c6f","modified":1529656553465},{"_id":"public/css/font.css","hash":"675361046170c7a4e8c11c774f64b3d1a631b900","modified":1529656553465},{"_id":"public/css/highlight.css","hash":"6f41c91734da4b7cfb1c3adee7fa2c2b0f29c8d8","modified":1529656553489},{"_id":"public/css/noise.css","hash":"f31d25752eb0b3694f2a05bf8ddce4fdc50e4b77","modified":1529656553490},{"_id":"source/_posts/Markdown/hello-install.md","hash":"594244de7c7fb17dcab479e311a9c1290bb6cd28","modified":1529667078512},{"_id":"public/2018/06/22/Markdown/hello-install/index.html","hash":"d7ba596d822034aba1ddf709558d9793e79f257f","modified":1529667090293}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-06-22T03:53:23.979Z","updated":"2017-10-28T00:39:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjipq0m3a0000f4ruj4qebiz8","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"vue脚手架的使用","_content":" 在这里一些关于node的安装就不做过多的介绍了，不会就上 [node](http://nodejs.cn/) 的官网上瞅瞅，自我领略其中的奥秘。\n\t1.vue-cli的安装\n\t   如果你安装了国内镜像 cnpm install -g vue-cli 来安装在最新的 vue 的项目中都带有webpack的插进，所以就不不用按装webpack 安装完成后可一用vue-V来查看就会有版本号\n\t2.生成的项目\n\t\t首先需要在命令行中进入到项目目录，然后输入：\n\t\tvue init webpack Vue-Project 然后就就按照下面的操做就进行确认生成项目就ok了\t\n\t\t{% codeblock Array.map %}\n\t\t\t值得注意的是一般情况下吧使用的eslint规范，给关掉，不然就报一下莫名的错误！\n\t\t{% endcodeblock %}\t\n\t\t{% img [class names] /img/1059788-20170106133950378-145408144.png [width] [height] [title text [alt text]] %}\n\t\t等安装完成过后输\n\t3.cnpm install 安装文件依赖\n\t4.npm run dev  启动项目\n\t5.npm run build 打包上线\n\t6.这里简单的说一下如果你想直接访问你打包好的页面，就需要改变一下配置文件 config>index.js\n\t\t{% img [class names] /img/1059788-20170106135204409-1735535107.png [width] [height] [title text [alt text]] %}\n\t\n\n-\n  \n##Quick 安装\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/Markdown/hello-world.md","raw":"---\ntitle: vue脚手架的使用\n---\n 在这里一些关于node的安装就不做过多的介绍了，不会就上 [node](http://nodejs.cn/) 的官网上瞅瞅，自我领略其中的奥秘。\n\t1.vue-cli的安装\n\t   如果你安装了国内镜像 cnpm install -g vue-cli 来安装在最新的 vue 的项目中都带有webpack的插进，所以就不不用按装webpack 安装完成后可一用vue-V来查看就会有版本号\n\t2.生成的项目\n\t\t首先需要在命令行中进入到项目目录，然后输入：\n\t\tvue init webpack Vue-Project 然后就就按照下面的操做就进行确认生成项目就ok了\t\n\t\t{% codeblock Array.map %}\n\t\t\t值得注意的是一般情况下吧使用的eslint规范，给关掉，不然就报一下莫名的错误！\n\t\t{% endcodeblock %}\t\n\t\t{% img [class names] /img/1059788-20170106133950378-145408144.png [width] [height] [title text [alt text]] %}\n\t\t等安装完成过后输\n\t3.cnpm install 安装文件依赖\n\t4.npm run dev  启动项目\n\t5.npm run build 打包上线\n\t6.这里简单的说一下如果你想直接访问你打包好的页面，就需要改变一下配置文件 config>index.js\n\t\t{% img [class names] /img/1059788-20170106135204409-1735535107.png [width] [height] [title text [alt text]] %}\n\t\n\n-\n  \n##Quick 安装\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"Markdown/hello-world","published":1,"date":"2018-06-22T04:09:37.347Z","updated":"2018-06-22T09:54:19.927Z","_id":"cjipq0mdb0001f4ruhcdu2trx","comments":1,"layout":"post","photos":[],"link":"","content":"<p> 在这里一些关于node的安装就不做过多的介绍了，不会就上 <a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"noopener\">node</a> 的官网上瞅瞅，自我领略其中的奥秘。<br>    1.vue-cli的安装<br>       如果你安装了国内镜像 cnpm install -g vue-cli 来安装在最新的 vue 的项目中都带有webpack的插进，所以就不不用按装webpack 安装完成后可一用vue-V来查看就会有版本号<br>    2.生成的项目<br>        首先需要在命令行中进入到项目目录，然后输入：<br>        vue init webpack Vue-Project 然后就就按照下面的操做就进行确认生成项目就ok了<br>        <figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">值得注意的是一般情况下吧使用的eslint规范，给关掉，不然就报一下莫名的错误！</span><br><span class=\"line\">\t\t</span><br></pre></td></tr></table></figure><br>        <img src=\"/img/1059788-20170106133950378-145408144.png\" class=\"[class names]\" title=\"[width] [height] [title text [alt text]]\"><br>        等安装完成过后输<br>    3.cnpm install 安装文件依赖<br>    4.npm run dev  启动项目<br>    5.npm run build 打包上线<br>    6.这里简单的说一下如果你想直接访问你打包好的页面，就需要改变一下配置文件 config&gt;index.js<br>        <img src=\"/img/1059788-20170106135204409-1735535107.png\" class=\"[class names]\" title=\"[width] [height] [title text [alt text]]\"></p>\n<p>-</p>\n<p>##Quick 安装</p>\n<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p> 在这里一些关于node的安装就不做过多的介绍了，不会就上 <a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"noopener\">node</a> 的官网上瞅瞅，自我领略其中的奥秘。<br>    1.vue-cli的安装<br>       如果你安装了国内镜像 cnpm install -g vue-cli 来安装在最新的 vue 的项目中都带有webpack的插进，所以就不不用按装webpack 安装完成后可一用vue-V来查看就会有版本号<br>    2.生成的项目<br>        首先需要在命令行中进入到项目目录，然后输入：<br>        vue init webpack Vue-Project 然后就就按照下面的操做就进行确认生成项目就ok了<br>        <figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">值得注意的是一般情况下吧使用的eslint规范，给关掉，不然就报一下莫名的错误！</span><br><span class=\"line\">\t\t</span><br></pre></td></tr></table></figure><br>        <img src=\"/img/1059788-20170106133950378-145408144.png\" class=\"[class names]\" title=\"[width] [height] [title text [alt text]]\"><br>        等安装完成过后输<br>    3.cnpm install 安装文件依赖<br>    4.npm run dev  启动项目<br>    5.npm run build 打包上线<br>    6.这里简单的说一下如果你想直接访问你打包好的页面，就需要改变一下配置文件 config&gt;index.js<br>        <img src=\"/img/1059788-20170106135204409-1735535107.png\" class=\"[class names]\" title=\"[width] [height] [title text [alt text]]\"></p>\n<p>-</p>\n<p>##Quick 安装</p>\n<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"vue一些简单的依赖插件","_content":" 在这里一就是一下简单的和必要的依赖\n\t1 安装scss的依赖\n\t\t{% codeblock Array.map %}\n\t\t\t npm install node-sass sass-loader -D\n\t\t\t \n\t\t{% endcodeblock %}\n\t\t\t需要在 webpack.base.conf.js修改配置\n\t\t\t\t  module: {\n\t\t\t\t\t{  //手动添加这一条，相当于是编译识别sass\n\t\t\t\t\t\ttest: /\\.scss$/,\n\t\t\t\t\t\tloaders: [\"style\", \"css\", \"sass\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\t\t \n\t\t在vue的组件中调用的时候要声明scss的配置\n\t\t{% codeblock Array.map %}\n\t\t\t <style scoped lang=\"scss\">\n\t\t\t\t\t</style> \n\t\t{% endcodeblock %}\n\t\t\t\t\n\t\t\n\t\t\n-\n  \n##\t2 安装axios\t\t\t\t\n\n### axios的安装\n\n``` bash\n\tnpm install axios\n```\n###vue-cli中的一些简单的应用，在main.js中引入axios\n\n``` bash\n\timport Vue from 'vue'\n\timport axios from 'axios'\n\tVue.prototype.$ajax = axios\n\t//在组件中就可以使用，\n\tmethods: {\n\t  submitForm () {\n\t\tthis.$ajax({\n\t\t  method: 'post',\n\t\t  url: '/user',\n\t\t  data: {\n\t\t\tname: 'wise',\n\t\t\tinfo: 'wrong'\n\t\t  }\n\t   })\n\t}\n```\n这要是不明来:[这里](https://www.cnblogs.com/wisewrong/p/6402183.html)看看\n\n### 然而这并不是我们真正想要得 一般在开发中我们都会对ajax的请求进行封装\n\n``` bash\nimport axios from 'axios';\nimport Qs from 'qs';\naxios.interceptors.request.use(function(config) {\n    Indicator.open(); //在发送请求之前做一些事情\n  return config;\n}, function(error) {\n\treturn Promise.reject(error); // 请求错误做一些事情\n});\n\naxios.interceptors.response.use(function(response) {\n\t Indicator.close();\t\t\t\t\t//对响应数据做一些处理\n\treturn response;\n}, function(error) {\n  return Promise.reject(error); // 对响应失败做一些处理\n});\naxios.defaults.timeout = 5000;//表示相应的时间\nexport function myAjaxRequest({imgPath='../images', appPath = \"\",url,dataType=true}={}){\n  if(dataType=false ){postData=Qs.stringify(postData)}//是用来判断是不是传值的方式的\n  return new Promise((resolve, reject) => {\n    axios.post(url, postData, {\n    headers: {//在默认是的情况下使用的是以json的字符串的是形式传过去的于传统的ajax的传值方式不同，所以我们要在这里从新设置请求header\n        'Content-Type': 'application/x-www-form-urlencoded',\n      }\n    })\n      .then(response => {\t\t\t\t\t\t\t\t\n          let data=response.data //是请求成功的数据处理，这个可以根据不通的业务需求进行调整\n          if (data.result=='success'){\n               resolve(data);//正确的数据返回\n          }else if (data.result=='error'||data.result=='fail'){\n                 alert(data.msg);\n          }else if(data.result == \"loginAjax\"){\n            showLogin(imgPath,appPath);\n          }else if (!isEmpty(data.state) && data.state==data.login){\n            if(null!=loginLayerIndex)return;\n            console.log(url);\n\n          }else if(data.reslutl == \"noprivilege\"){\n            alert(\"您无此权限操作该功能模块!若要开通，请联系管理员。\");\n          }else if(data.result == \"illegalPath\"){\n            alert(\"您访问的路径为非法路径，请检查！\");\n          }else {\n              resolve(data);//正确的数据返回\n          }\n      }, err => {\n        //这里就是请求错误时的错误提示\n        if (err.textStatus=='timeout'){\n          alert(\"连接超时，请检查网络\");\n        }else if (err.textStatus=='error'){\n          //alert(\"请求错误\"+errorThrown);\n        }else if (err.textStatus=='abort'){\n          //alert(\"请求中止\");\n        }else{\n             alert(err.textStatus+\",HTTP error occurs\"+err.errorThrown);\n         }\n\n      })\n  })\n}\n//在mian.js里面引入\nimport {myAjaxRequest} from './api/ajax'\nue.prototype.$http = myAjaxRequest  //就此我们在的所有配置都已完成\n//在组件中的使用\nmethods:{\n loginto:function(){\n                 var that=this\n                 this.par.postData.loginNo=this.phone\n                 this.par.postData.password=md5(this.password).toUpperCase()\n                  this.$http(this.par).then(res=>{\n                       console.log(res)\n                      this.$router.push('/home')\n               })\n          }\n}\n```\n\n下载瞅瞅: [来啊](/js/ajax.js)\n\n### 3.引入静态的文件\n\n``` bash\n\t\t//vue的轮播图 npm install vue-awesome-swiper --save \n\t\t查看的地址: [gogo](https://www.jianshu.com/p/fece694a6959)\t\n\t\t\tnpm install vue-verify-plugin -S\n\t\t查看的地址: [gogo](https://www.jianshu.com/p/aba3f4dc5758)\n\t\t\t\t\n```\n### vue安装jq的方法\n``` bash\n\tnpm install jquery --save-dev \n在build/webpack.base.conf.js中添加如下内容：\t\nvar webpack = require('webpack')\nplugins: [\n  new webpack.ProvidePlugin({\n    $: \"jquery\",\n    jQuery: \"jquery\"\n  })\n],\nimport $ from 'jquery'\n```\n查看的地址: [gogo](https://www.cnblogs.com/hedeyong/p/7864842.html)\n###目前所想到的就这么多日后想到的在添加 \n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/Markdown/hello-install.md","raw":"---\ntitle: vue一些简单的依赖插件\n---\n 在这里一就是一下简单的和必要的依赖\n\t1 安装scss的依赖\n\t\t{% codeblock Array.map %}\n\t\t\t npm install node-sass sass-loader -D\n\t\t\t \n\t\t{% endcodeblock %}\n\t\t\t需要在 webpack.base.conf.js修改配置\n\t\t\t\t  module: {\n\t\t\t\t\t{  //手动添加这一条，相当于是编译识别sass\n\t\t\t\t\t\ttest: /\\.scss$/,\n\t\t\t\t\t\tloaders: [\"style\", \"css\", \"sass\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\t\t \n\t\t在vue的组件中调用的时候要声明scss的配置\n\t\t{% codeblock Array.map %}\n\t\t\t <style scoped lang=\"scss\">\n\t\t\t\t\t</style> \n\t\t{% endcodeblock %}\n\t\t\t\t\n\t\t\n\t\t\n-\n  \n##\t2 安装axios\t\t\t\t\n\n### axios的安装\n\n``` bash\n\tnpm install axios\n```\n###vue-cli中的一些简单的应用，在main.js中引入axios\n\n``` bash\n\timport Vue from 'vue'\n\timport axios from 'axios'\n\tVue.prototype.$ajax = axios\n\t//在组件中就可以使用，\n\tmethods: {\n\t  submitForm () {\n\t\tthis.$ajax({\n\t\t  method: 'post',\n\t\t  url: '/user',\n\t\t  data: {\n\t\t\tname: 'wise',\n\t\t\tinfo: 'wrong'\n\t\t  }\n\t   })\n\t}\n```\n这要是不明来:[这里](https://www.cnblogs.com/wisewrong/p/6402183.html)看看\n\n### 然而这并不是我们真正想要得 一般在开发中我们都会对ajax的请求进行封装\n\n``` bash\nimport axios from 'axios';\nimport Qs from 'qs';\naxios.interceptors.request.use(function(config) {\n    Indicator.open(); //在发送请求之前做一些事情\n  return config;\n}, function(error) {\n\treturn Promise.reject(error); // 请求错误做一些事情\n});\n\naxios.interceptors.response.use(function(response) {\n\t Indicator.close();\t\t\t\t\t//对响应数据做一些处理\n\treturn response;\n}, function(error) {\n  return Promise.reject(error); // 对响应失败做一些处理\n});\naxios.defaults.timeout = 5000;//表示相应的时间\nexport function myAjaxRequest({imgPath='../images', appPath = \"\",url,dataType=true}={}){\n  if(dataType=false ){postData=Qs.stringify(postData)}//是用来判断是不是传值的方式的\n  return new Promise((resolve, reject) => {\n    axios.post(url, postData, {\n    headers: {//在默认是的情况下使用的是以json的字符串的是形式传过去的于传统的ajax的传值方式不同，所以我们要在这里从新设置请求header\n        'Content-Type': 'application/x-www-form-urlencoded',\n      }\n    })\n      .then(response => {\t\t\t\t\t\t\t\t\n          let data=response.data //是请求成功的数据处理，这个可以根据不通的业务需求进行调整\n          if (data.result=='success'){\n               resolve(data);//正确的数据返回\n          }else if (data.result=='error'||data.result=='fail'){\n                 alert(data.msg);\n          }else if(data.result == \"loginAjax\"){\n            showLogin(imgPath,appPath);\n          }else if (!isEmpty(data.state) && data.state==data.login){\n            if(null!=loginLayerIndex)return;\n            console.log(url);\n\n          }else if(data.reslutl == \"noprivilege\"){\n            alert(\"您无此权限操作该功能模块!若要开通，请联系管理员。\");\n          }else if(data.result == \"illegalPath\"){\n            alert(\"您访问的路径为非法路径，请检查！\");\n          }else {\n              resolve(data);//正确的数据返回\n          }\n      }, err => {\n        //这里就是请求错误时的错误提示\n        if (err.textStatus=='timeout'){\n          alert(\"连接超时，请检查网络\");\n        }else if (err.textStatus=='error'){\n          //alert(\"请求错误\"+errorThrown);\n        }else if (err.textStatus=='abort'){\n          //alert(\"请求中止\");\n        }else{\n             alert(err.textStatus+\",HTTP error occurs\"+err.errorThrown);\n         }\n\n      })\n  })\n}\n//在mian.js里面引入\nimport {myAjaxRequest} from './api/ajax'\nue.prototype.$http = myAjaxRequest  //就此我们在的所有配置都已完成\n//在组件中的使用\nmethods:{\n loginto:function(){\n                 var that=this\n                 this.par.postData.loginNo=this.phone\n                 this.par.postData.password=md5(this.password).toUpperCase()\n                  this.$http(this.par).then(res=>{\n                       console.log(res)\n                      this.$router.push('/home')\n               })\n          }\n}\n```\n\n下载瞅瞅: [来啊](/js/ajax.js)\n\n### 3.引入静态的文件\n\n``` bash\n\t\t//vue的轮播图 npm install vue-awesome-swiper --save \n\t\t查看的地址: [gogo](https://www.jianshu.com/p/fece694a6959)\t\n\t\t\tnpm install vue-verify-plugin -S\n\t\t查看的地址: [gogo](https://www.jianshu.com/p/aba3f4dc5758)\n\t\t\t\t\n```\n### vue安装jq的方法\n``` bash\n\tnpm install jquery --save-dev \n在build/webpack.base.conf.js中添加如下内容：\t\nvar webpack = require('webpack')\nplugins: [\n  new webpack.ProvidePlugin({\n    $: \"jquery\",\n    jQuery: \"jquery\"\n  })\n],\nimport $ from 'jquery'\n```\n查看的地址: [gogo](https://www.cnblogs.com/hedeyong/p/7864842.html)\n###目前所想到的就这么多日后想到的在添加 \n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"Markdown/hello-install","published":1,"date":"2018-06-22T09:55:15.342Z","updated":"2018-06-22T13:11:21.649Z","_id":"cjipsvmgv00019orudgxdnnb9","comments":1,"layout":"post","photos":[],"link":"","content":"<p> 在这里一就是一下简单的和必要的依赖<br>    1 安装scss的依赖<br>        <figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install node-sass sass-loader -D</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br></pre></td></tr></table></figure><br>            需要在 webpack.base.conf.js修改配置<br>                  module: {<br>                    {  //手动添加这一条，相当于是编译识别sass<br>                        test: /.scss$/,<br>                        loaders: [“style”, “css”, “sass”]<br>                        }<br>                    }<br>        在vue的组件中调用的时候要声明scss的配置<br>        <figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class=\"line\">\t&lt;/style&gt; </span><br><span class=\"line\">\t\t</span><br></pre></td></tr></table></figure></p>\n<p>-</p>\n<h2 id=\"2-安装axios\"><a href=\"#2-安装axios\" class=\"headerlink\" title=\"2 安装axios\"></a>2 安装axios</h2><h3 id=\"axios的安装\"><a href=\"#axios的安装\" class=\"headerlink\" title=\"axios的安装\"></a>axios的安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install axios</span><br></pre></td></tr></table></figure>\n<p>###vue-cli中的一些简单的应用，在main.js中引入axios</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import Vue from <span class=\"string\">'vue'</span></span><br><span class=\"line\">import axios from <span class=\"string\">'axios'</span></span><br><span class=\"line\">Vue.prototype.<span class=\"variable\">$ajax</span> = axios</span><br><span class=\"line\">//在组件中就可以使用，</span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">submitForm</span></span> () &#123;</span><br><span class=\"line\">\tthis.<span class=\"variable\">$ajax</span>(&#123;</span><br><span class=\"line\">\t  method: <span class=\"string\">'post'</span>,</span><br><span class=\"line\">\t  url: <span class=\"string\">'/user'</span>,</span><br><span class=\"line\">\t  data: &#123;</span><br><span class=\"line\">\t\tname: <span class=\"string\">'wise'</span>,</span><br><span class=\"line\">\t\tinfo: <span class=\"string\">'wrong'</span></span><br><span class=\"line\">\t  &#125;</span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这要是不明来:<a href=\"https://www.cnblogs.com/wisewrong/p/6402183.html\" target=\"_blank\" rel=\"noopener\">这里</a>看看</p>\n<h3 id=\"然而这并不是我们真正想要得-一般在开发中我们都会对ajax的请求进行封装\"><a href=\"#然而这并不是我们真正想要得-一般在开发中我们都会对ajax的请求进行封装\" class=\"headerlink\" title=\"然而这并不是我们真正想要得 一般在开发中我们都会对ajax的请求进行封装\"></a>然而这并不是我们真正想要得 一般在开发中我们都会对ajax的请求进行封装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import axios from <span class=\"string\">'axios'</span>;</span><br><span class=\"line\">import Qs from <span class=\"string\">'qs'</span>;</span><br><span class=\"line\">axios.interceptors.request.use(<span class=\"keyword\">function</span>(config) &#123;</span><br><span class=\"line\">    Indicator.open(); //在发送请求之前做一些事情</span><br><span class=\"line\">  <span class=\"built_in\">return</span> config;</span><br><span class=\"line\">&#125;, <span class=\"keyword\">function</span>(error) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">return</span> Promise.reject(error); // 请求错误做一些事情</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">axios.interceptors.response.use(<span class=\"keyword\">function</span>(response) &#123;</span><br><span class=\"line\">\t Indicator.close();\t\t\t\t\t//对响应数据做一些处理</span><br><span class=\"line\">\t<span class=\"built_in\">return</span> response;</span><br><span class=\"line\">&#125;, <span class=\"keyword\">function</span>(error) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> Promise.reject(error); // 对响应失败做一些处理</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">axios.defaults.timeout = 5000;//表示相应的时间</span><br><span class=\"line\"><span class=\"built_in\">export</span> <span class=\"keyword\">function</span> myAjaxRequest(&#123;imgPath=<span class=\"string\">'../images'</span>, appPath = <span class=\"string\">\"\"</span>,url,dataType=<span class=\"literal\">true</span>&#125;=&#123;&#125;)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(dataType=<span class=\"literal\">false</span> )&#123;postData=Qs.stringify(postData)&#125;//是用来判断是不是传值的方式的</span><br><span class=\"line\">  <span class=\"built_in\">return</span> new Promise((resolve, reject) =&gt; &#123;</span><br><span class=\"line\">    axios.post(url, postData, &#123;</span><br><span class=\"line\">    headers: &#123;//在默认是的情况下使用的是以json的字符串的是形式传过去的于传统的ajax的传值方式不同，所以我们要在这里从新设置请求header</span><br><span class=\"line\">        <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/x-www-form-urlencoded'</span>,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">      .<span class=\"keyword\">then</span>(response =&gt; &#123;\t\t\t\t\t\t\t\t</span><br><span class=\"line\">          <span class=\"built_in\">let</span> data=response.data //是请求成功的数据处理，这个可以根据不通的业务需求进行调整</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (data.result==<span class=\"string\">'success'</span>)&#123;</span><br><span class=\"line\">               resolve(data);//正确的数据返回</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (data.result==<span class=\"string\">'error'</span>||data.result==<span class=\"string\">'fail'</span>)&#123;</span><br><span class=\"line\">                 alert(data.msg);</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(data.result == <span class=\"string\">\"loginAjax\"</span>)&#123;</span><br><span class=\"line\">            showLogin(imgPath,appPath);</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!isEmpty(data.state) &amp;&amp; data.state==data.login)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(null!=loginLayerIndex)<span class=\"built_in\">return</span>;</span><br><span class=\"line\">            console.log(url);</span><br><span class=\"line\"></span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(data.reslutl == <span class=\"string\">\"noprivilege\"</span>)&#123;</span><br><span class=\"line\">            alert(<span class=\"string\">\"您无此权限操作该功能模块!若要开通，请联系管理员。\"</span>);</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(data.result == <span class=\"string\">\"illegalPath\"</span>)&#123;</span><br><span class=\"line\">            alert(<span class=\"string\">\"您访问的路径为非法路径，请检查！\"</span>);</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              resolve(data);//正确的数据返回</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;, err =&gt; &#123;</span><br><span class=\"line\">        //这里就是请求错误时的错误提示</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err.textStatus==<span class=\"string\">'timeout'</span>)&#123;</span><br><span class=\"line\">          alert(<span class=\"string\">\"连接超时，请检查网络\"</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (err.textStatus==<span class=\"string\">'error'</span>)&#123;</span><br><span class=\"line\">          //alert(<span class=\"string\">\"请求错误\"</span>+errorThrown);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (err.textStatus==<span class=\"string\">'abort'</span>)&#123;</span><br><span class=\"line\">          //alert(<span class=\"string\">\"请求中止\"</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">             alert(err.textStatus+<span class=\"string\">\",HTTP error occurs\"</span>+err.errorThrown);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//在mian.js里面引入</span><br><span class=\"line\">import &#123;myAjaxRequest&#125; from <span class=\"string\">'./api/ajax'</span></span><br><span class=\"line\">ue.prototype.<span class=\"variable\">$http</span> = myAjaxRequest  //就此我们在的所有配置都已完成</span><br><span class=\"line\">//在组件中的使用</span><br><span class=\"line\">methods:&#123;</span><br><span class=\"line\"> loginto:<span class=\"function\"><span class=\"title\">function</span></span>()&#123;</span><br><span class=\"line\">                 var that=this</span><br><span class=\"line\">                 this.par.postData.loginNo=this.phone</span><br><span class=\"line\">                 this.par.postData.password=md5(this.password).toUpperCase()</span><br><span class=\"line\">                  this.<span class=\"variable\">$http</span>(this.par).<span class=\"keyword\">then</span>(res=&gt;&#123;</span><br><span class=\"line\">                       console.log(res)</span><br><span class=\"line\">                      this.<span class=\"variable\">$router</span>.push(<span class=\"string\">'/home'</span>)</span><br><span class=\"line\">               &#125;)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下载瞅瞅: <a href=\"/js/ajax.js\">来啊</a></p>\n<h3 id=\"3-引入静态的文件\"><a href=\"#3-引入静态的文件\" class=\"headerlink\" title=\"3.引入静态的文件\"></a>3.引入静态的文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//vue的轮播图 npm install vue-awesome-swiper --save </span><br><span class=\"line\">查看的地址: [gogo](https://www.jianshu.com/p/fece694a6959)\t</span><br><span class=\"line\">\tnpm install vue-verify-plugin -S</span><br><span class=\"line\">查看的地址: [gogo](https://www.jianshu.com/p/aba3f4dc5758)</span><br></pre></td></tr></table></figure>\n<h3 id=\"vue安装jq的方法\"><a href=\"#vue安装jq的方法\" class=\"headerlink\" title=\"vue安装jq的方法\"></a>vue安装jq的方法</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\tnpm install jquery --save-dev </span><br><span class=\"line\">在build/webpack.base.conf.js中添加如下内容：\t</span><br><span class=\"line\">var webpack = require(<span class=\"string\">'webpack'</span>)</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">  new webpack.ProvidePlugin(&#123;</span><br><span class=\"line\">    $: <span class=\"string\">\"jquery\"</span>,</span><br><span class=\"line\">    jQuery: <span class=\"string\">\"jquery\"</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">],</span><br><span class=\"line\">import $ from <span class=\"string\">'jquery'</span></span><br></pre></td></tr></table></figure>\n<p>查看的地址: <a href=\"https://www.cnblogs.com/hedeyong/p/7864842.html\" target=\"_blank\" rel=\"noopener\">gogo</a></p>\n<p>###目前所想到的就这么多日后想到的在添加 </p>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p> 在这里一就是一下简单的和必要的依赖<br>    1 安装scss的依赖<br>        <figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install node-sass sass-loader -D</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br></pre></td></tr></table></figure><br>            需要在 webpack.base.conf.js修改配置<br>                  module: {<br>                    {  //手动添加这一条，相当于是编译识别sass<br>                        test: /.scss$/,<br>                        loaders: [“style”, “css”, “sass”]<br>                        }<br>                    }<br>        在vue的组件中调用的时候要声明scss的配置<br>        <figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class=\"line\">\t&lt;/style&gt; </span><br><span class=\"line\">\t\t</span><br></pre></td></tr></table></figure></p>\n<p>-</p>\n<h2 id=\"2-安装axios\"><a href=\"#2-安装axios\" class=\"headerlink\" title=\"2 安装axios\"></a>2 安装axios</h2><h3 id=\"axios的安装\"><a href=\"#axios的安装\" class=\"headerlink\" title=\"axios的安装\"></a>axios的安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install axios</span><br></pre></td></tr></table></figure>\n<p>###vue-cli中的一些简单的应用，在main.js中引入axios</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import Vue from <span class=\"string\">'vue'</span></span><br><span class=\"line\">import axios from <span class=\"string\">'axios'</span></span><br><span class=\"line\">Vue.prototype.<span class=\"variable\">$ajax</span> = axios</span><br><span class=\"line\">//在组件中就可以使用，</span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">submitForm</span></span> () &#123;</span><br><span class=\"line\">\tthis.<span class=\"variable\">$ajax</span>(&#123;</span><br><span class=\"line\">\t  method: <span class=\"string\">'post'</span>,</span><br><span class=\"line\">\t  url: <span class=\"string\">'/user'</span>,</span><br><span class=\"line\">\t  data: &#123;</span><br><span class=\"line\">\t\tname: <span class=\"string\">'wise'</span>,</span><br><span class=\"line\">\t\tinfo: <span class=\"string\">'wrong'</span></span><br><span class=\"line\">\t  &#125;</span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这要是不明来:<a href=\"https://www.cnblogs.com/wisewrong/p/6402183.html\" target=\"_blank\" rel=\"noopener\">这里</a>看看</p>\n<h3 id=\"然而这并不是我们真正想要得-一般在开发中我们都会对ajax的请求进行封装\"><a href=\"#然而这并不是我们真正想要得-一般在开发中我们都会对ajax的请求进行封装\" class=\"headerlink\" title=\"然而这并不是我们真正想要得 一般在开发中我们都会对ajax的请求进行封装\"></a>然而这并不是我们真正想要得 一般在开发中我们都会对ajax的请求进行封装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import axios from <span class=\"string\">'axios'</span>;</span><br><span class=\"line\">import Qs from <span class=\"string\">'qs'</span>;</span><br><span class=\"line\">axios.interceptors.request.use(<span class=\"keyword\">function</span>(config) &#123;</span><br><span class=\"line\">    Indicator.open(); //在发送请求之前做一些事情</span><br><span class=\"line\">  <span class=\"built_in\">return</span> config;</span><br><span class=\"line\">&#125;, <span class=\"keyword\">function</span>(error) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">return</span> Promise.reject(error); // 请求错误做一些事情</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">axios.interceptors.response.use(<span class=\"keyword\">function</span>(response) &#123;</span><br><span class=\"line\">\t Indicator.close();\t\t\t\t\t//对响应数据做一些处理</span><br><span class=\"line\">\t<span class=\"built_in\">return</span> response;</span><br><span class=\"line\">&#125;, <span class=\"keyword\">function</span>(error) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> Promise.reject(error); // 对响应失败做一些处理</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">axios.defaults.timeout = 5000;//表示相应的时间</span><br><span class=\"line\"><span class=\"built_in\">export</span> <span class=\"keyword\">function</span> myAjaxRequest(&#123;imgPath=<span class=\"string\">'../images'</span>, appPath = <span class=\"string\">\"\"</span>,url,dataType=<span class=\"literal\">true</span>&#125;=&#123;&#125;)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(dataType=<span class=\"literal\">false</span> )&#123;postData=Qs.stringify(postData)&#125;//是用来判断是不是传值的方式的</span><br><span class=\"line\">  <span class=\"built_in\">return</span> new Promise((resolve, reject) =&gt; &#123;</span><br><span class=\"line\">    axios.post(url, postData, &#123;</span><br><span class=\"line\">    headers: &#123;//在默认是的情况下使用的是以json的字符串的是形式传过去的于传统的ajax的传值方式不同，所以我们要在这里从新设置请求header</span><br><span class=\"line\">        <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/x-www-form-urlencoded'</span>,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">      .<span class=\"keyword\">then</span>(response =&gt; &#123;\t\t\t\t\t\t\t\t</span><br><span class=\"line\">          <span class=\"built_in\">let</span> data=response.data //是请求成功的数据处理，这个可以根据不通的业务需求进行调整</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (data.result==<span class=\"string\">'success'</span>)&#123;</span><br><span class=\"line\">               resolve(data);//正确的数据返回</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (data.result==<span class=\"string\">'error'</span>||data.result==<span class=\"string\">'fail'</span>)&#123;</span><br><span class=\"line\">                 alert(data.msg);</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(data.result == <span class=\"string\">\"loginAjax\"</span>)&#123;</span><br><span class=\"line\">            showLogin(imgPath,appPath);</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!isEmpty(data.state) &amp;&amp; data.state==data.login)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(null!=loginLayerIndex)<span class=\"built_in\">return</span>;</span><br><span class=\"line\">            console.log(url);</span><br><span class=\"line\"></span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(data.reslutl == <span class=\"string\">\"noprivilege\"</span>)&#123;</span><br><span class=\"line\">            alert(<span class=\"string\">\"您无此权限操作该功能模块!若要开通，请联系管理员。\"</span>);</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(data.result == <span class=\"string\">\"illegalPath\"</span>)&#123;</span><br><span class=\"line\">            alert(<span class=\"string\">\"您访问的路径为非法路径，请检查！\"</span>);</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              resolve(data);//正确的数据返回</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;, err =&gt; &#123;</span><br><span class=\"line\">        //这里就是请求错误时的错误提示</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err.textStatus==<span class=\"string\">'timeout'</span>)&#123;</span><br><span class=\"line\">          alert(<span class=\"string\">\"连接超时，请检查网络\"</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (err.textStatus==<span class=\"string\">'error'</span>)&#123;</span><br><span class=\"line\">          //alert(<span class=\"string\">\"请求错误\"</span>+errorThrown);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (err.textStatus==<span class=\"string\">'abort'</span>)&#123;</span><br><span class=\"line\">          //alert(<span class=\"string\">\"请求中止\"</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">             alert(err.textStatus+<span class=\"string\">\",HTTP error occurs\"</span>+err.errorThrown);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//在mian.js里面引入</span><br><span class=\"line\">import &#123;myAjaxRequest&#125; from <span class=\"string\">'./api/ajax'</span></span><br><span class=\"line\">ue.prototype.<span class=\"variable\">$http</span> = myAjaxRequest  //就此我们在的所有配置都已完成</span><br><span class=\"line\">//在组件中的使用</span><br><span class=\"line\">methods:&#123;</span><br><span class=\"line\"> loginto:<span class=\"function\"><span class=\"title\">function</span></span>()&#123;</span><br><span class=\"line\">                 var that=this</span><br><span class=\"line\">                 this.par.postData.loginNo=this.phone</span><br><span class=\"line\">                 this.par.postData.password=md5(this.password).toUpperCase()</span><br><span class=\"line\">                  this.<span class=\"variable\">$http</span>(this.par).<span class=\"keyword\">then</span>(res=&gt;&#123;</span><br><span class=\"line\">                       console.log(res)</span><br><span class=\"line\">                      this.<span class=\"variable\">$router</span>.push(<span class=\"string\">'/home'</span>)</span><br><span class=\"line\">               &#125;)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下载瞅瞅: <a href=\"/js/ajax.js\">来啊</a></p>\n<h3 id=\"3-引入静态的文件\"><a href=\"#3-引入静态的文件\" class=\"headerlink\" title=\"3.引入静态的文件\"></a>3.引入静态的文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//vue的轮播图 npm install vue-awesome-swiper --save </span><br><span class=\"line\">查看的地址: [gogo](https://www.jianshu.com/p/fece694a6959)\t</span><br><span class=\"line\">\tnpm install vue-verify-plugin -S</span><br><span class=\"line\">查看的地址: [gogo](https://www.jianshu.com/p/aba3f4dc5758)</span><br></pre></td></tr></table></figure>\n<h3 id=\"vue安装jq的方法\"><a href=\"#vue安装jq的方法\" class=\"headerlink\" title=\"vue安装jq的方法\"></a>vue安装jq的方法</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\tnpm install jquery --save-dev </span><br><span class=\"line\">在build/webpack.base.conf.js中添加如下内容：\t</span><br><span class=\"line\">var webpack = require(<span class=\"string\">'webpack'</span>)</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">  new webpack.ProvidePlugin(&#123;</span><br><span class=\"line\">    $: <span class=\"string\">\"jquery\"</span>,</span><br><span class=\"line\">    jQuery: <span class=\"string\">\"jquery\"</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">],</span><br><span class=\"line\">import $ from <span class=\"string\">'jquery'</span></span><br></pre></td></tr></table></figure>\n<p>查看的地址: <a href=\"https://www.cnblogs.com/hedeyong/p/7864842.html\" target=\"_blank\" rel=\"noopener\">gogo</a></p>\n<p>###目前所想到的就这么多日后想到的在添加 </p>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"vue正式环境和测试测试环境的ajax的请求","_content":" 废话不多说直接上配置\n 这个事本地测是的域名\t\n {% img [class names] /img/8697066-c059c2d9fd8a8332.png [width] [height] [title text [alt text]] %}\n 这是正式的配置\n\t{% img [class names] /img/8697066-21ae22a4fa300d73.png [width] [height] [title text [alt text]] %}\n\t\n-\n  \n## 在我们的ajax的封装的位置进行引入就可以了 \n\t\n### 在npm run dev  的时候运行的就是生产环境  npm run build 的正式环境\n\n### 但是在实际的生产axios的是不能进行跨域请求的、这个时候就要进行一些文件的配置\n{% img [class names] /img/8697066-f44a450b85969109.png [width] [height] [title text [alt text]] %}\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/Markdown/hello-serve.md","raw":"---\ntitle: vue正式环境和测试测试环境的ajax的请求\n---\n 废话不多说直接上配置\n 这个事本地测是的域名\t\n {% img [class names] /img/8697066-c059c2d9fd8a8332.png [width] [height] [title text [alt text]] %}\n 这是正式的配置\n\t{% img [class names] /img/8697066-21ae22a4fa300d73.png [width] [height] [title text [alt text]] %}\n\t\n-\n  \n## 在我们的ajax的封装的位置进行引入就可以了 \n\t\n### 在npm run dev  的时候运行的就是生产环境  npm run build 的正式环境\n\n### 但是在实际的生产axios的是不能进行跨域请求的、这个时候就要进行一些文件的配置\n{% img [class names] /img/8697066-f44a450b85969109.png [width] [height] [title text [alt text]] %}\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"Markdown/hello-serve","published":1,"date":"2018-06-22T13:13:47.180Z","updated":"2018-06-22T13:44:52.707Z","_id":"cjipzyxym0001ocrux4fab78g","comments":1,"layout":"post","photos":[],"link":"","content":"<p> 废话不多说直接上配置<br> 这个事本地测是的域名<br> <img src=\"/img/8697066-c059c2d9fd8a8332.png\" class=\"[class names]\" title=\"[width] [height] [title text [alt text]]\"><br> 这是正式的配置<br>    <img src=\"/img/8697066-21ae22a4fa300d73.png\" class=\"[class names]\" title=\"[width] [height] [title text [alt text]]\"></p>\n<p>-</p>\n<h2 id=\"在我们的ajax的封装的位置进行引入就可以了\"><a href=\"#在我们的ajax的封装的位置进行引入就可以了\" class=\"headerlink\" title=\"在我们的ajax的封装的位置进行引入就可以了\"></a>在我们的ajax的封装的位置进行引入就可以了</h2><h3 id=\"在npm-run-dev-的时候运行的就是生产环境-npm-run-build-的正式环境\"><a href=\"#在npm-run-dev-的时候运行的就是生产环境-npm-run-build-的正式环境\" class=\"headerlink\" title=\"在npm run dev  的时候运行的就是生产环境  npm run build 的正式环境\"></a>在npm run dev  的时候运行的就是生产环境  npm run build 的正式环境</h3><h3 id=\"但是在实际的生产axios的是不能进行跨域请求的、这个时候就要进行一些文件的配置\"><a href=\"#但是在实际的生产axios的是不能进行跨域请求的、这个时候就要进行一些文件的配置\" class=\"headerlink\" title=\"但是在实际的生产axios的是不能进行跨域请求的、这个时候就要进行一些文件的配置\"></a>但是在实际的生产axios的是不能进行跨域请求的、这个时候就要进行一些文件的配置</h3><img src=\"/img/8697066-f44a450b85969109.png\" class=\"[class names]\" title=\"[width] [height] [title text [alt text]]\">\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p> 废话不多说直接上配置<br> 这个事本地测是的域名<br> <img src=\"/img/8697066-c059c2d9fd8a8332.png\" class=\"[class names]\" title=\"[width] [height] [title text [alt text]]\"><br> 这是正式的配置<br>    <img src=\"/img/8697066-21ae22a4fa300d73.png\" class=\"[class names]\" title=\"[width] [height] [title text [alt text]]\"></p>\n<p>-</p>\n<h2 id=\"在我们的ajax的封装的位置进行引入就可以了\"><a href=\"#在我们的ajax的封装的位置进行引入就可以了\" class=\"headerlink\" title=\"在我们的ajax的封装的位置进行引入就可以了\"></a>在我们的ajax的封装的位置进行引入就可以了</h2><h3 id=\"在npm-run-dev-的时候运行的就是生产环境-npm-run-build-的正式环境\"><a href=\"#在npm-run-dev-的时候运行的就是生产环境-npm-run-build-的正式环境\" class=\"headerlink\" title=\"在npm run dev  的时候运行的就是生产环境  npm run build 的正式环境\"></a>在npm run dev  的时候运行的就是生产环境  npm run build 的正式环境</h3><h3 id=\"但是在实际的生产axios的是不能进行跨域请求的、这个时候就要进行一些文件的配置\"><a href=\"#但是在实际的生产axios的是不能进行跨域请求的、这个时候就要进行一些文件的配置\" class=\"headerlink\" title=\"但是在实际的生产axios的是不能进行跨域请求的、这个时候就要进行一些文件的配置\"></a>但是在实际的生产axios的是不能进行跨域请求的、这个时候就要进行一些文件的配置</h3><img src=\"/img/8697066-f44a450b85969109.png\" class=\"[class names]\" title=\"[width] [height] [title text [alt text]]\">\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}